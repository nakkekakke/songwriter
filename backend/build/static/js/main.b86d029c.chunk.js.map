{"version":3,"sources":["components/LoadingScreen.js","components/SnackbarAlert.js","components/app/App.js","index.js","redux/alertReducer.js","services/authService.js","redux/authReducer.js","redux/store.js","helpers/songHelper.js","services/config.js","helpers/auth.js","services/songService.js","redux/songReducer.js","redux/snapshotReducer.js"],"names":["useStyles","makeStyles","root","marginTop","LoadingScreen","classes","Container","align","className","Typography","component","variant","CircularProgress","size","thickness","SnackbarAlert","dispatch","useDispatch","alert","useSelector","state","handleClose","event","reason","hideAlert","Snackbar","open","autoHideDuration","onClose","style","marginBottom","Alert","severity","type","message","AuthenticatedApp","React","lazy","a","UnauthenticatedApp","App","user","auth","useEffect","jsonUser","localStorage","getItem","console","log","authUser","JSON","parse","loginWithToken","fallback","ReactDOM","render","CssBaseline","store","document","getElementById","alerts","authFailure","authSuccess","loginSuccess","loginFailure","welcome","songCreated","songSaved","logout","signupSuccess","signupFailure","initialState","showAlert","data","alertReducer","action","authenticate","username","password","axios","post","res","loginInProgress","loggedIn","login","authService","setItem","stringify","removeItem","authReducer","composeEnhancers","composeWithDevTools","trace","reducers","combineReducers","songs","songReducer","snapshot","snapshotReducer","createStore","applyMiddleware","thunk","cutStringIntoLines","string","cutLines","match","getDefaultSection","id","name","lines","createNewSectionId","song","sections","length","map","s","reduce","max","current","createNewSection","linesArrayToString","i","concat","linesStringToArray","line","trim","filter","lineCount","getDefaultSong","title","addNewSection","newSection","push","cloneAndAddSection","section","instance","create","interceptors","response","use","error","status","Promise","reject","getAuthHeader","token","url","getAuthConfig","headers","getAll","get","params","getOne","songObjectWithUser","edit","songObject","put","destroy","delete","createSong","songService","createdSong","editTitle","songToDispatch","initializeSongs","deleteSong","returnValue","saveSong","savedSong","getSongFromSnapshot","editSection","songId","deleteSection","addSection","songHelper","cloneSection","sortSections","sortedSections","newState","sectionId","find","editedSections","newSong","saveSnapshot","resetSnapshot"],"mappings":"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","file":"static/js/main.b86d029c.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, CircularProgress, makeStyles, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 114 // 64 (navbar) + 20 (container padding) + 30 (login header top margin)\n  }\n}))\n\nconst LoadingScreen = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <Container align='center' className={classes.root}>\n        <Typography component='h1' variant='h4'>\n          Loading\n        </Typography>\n        <h1>Loading</h1>\n        <CircularProgress size={70} thickness={4}/>\n      </Container>\n    </div>\n  )\n}\n\nexport default LoadingScreen","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { hideAlert } from '../redux/alertReducer'\n\n//const Alert = (props) => {\n//  return <MuiAlert elevation={6} variant='filled' {...props} />\n//}\n\n\nconst SnackbarAlert = () => {\n\n  const dispatch = useDispatch()\n\n  const alert = useSelector((state) => state.alert)\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'clickaway') {\n      dispatch(hideAlert())\n    }\n  }\n\n  return (\n    <Snackbar\n      open={alert.open}\n      autoHideDuration={5000}\n      onClose={handleClose}\n      style={{ marginBottom: 5 }}\n    >\n      <Alert\n        variant='filled'\n        onClose={handleClose}\n        severity={alert.type}\n      >\n        {alert.message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default SnackbarAlert","import React, { useEffect, Suspense } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginWithToken } from '../../redux/authReducer'\nimport LoadingScreen from '../LoadingScreen'\nimport SnackbarAlert from '../SnackbarAlert'\n\nconst AuthenticatedApp = React.lazy(async () => await import('./AuthenticatedApp'))\nconst UnauthenticatedApp = React.lazy(async () => await import('./UnauthenticatedApp'))\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector((state) => state.auth.user)\n\n  useEffect(() => {\n    const jsonUser = localStorage.getItem('SongWriterUser')\n    console.log('Getting user effect')\n    if (jsonUser) {\n      const authUser = JSON.parse(jsonUser)\n      dispatch(loginWithToken(authUser))\n    }\n  }, [dispatch])\n\n  return (\n    <div>\n      <Suspense fallback={<LoadingScreen />}>\n        {user ?\n          <AuthenticatedApp/> :\n          <UnauthenticatedApp />\n        }\n      </Suspense>\n      <SnackbarAlert />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/app/App'\nimport { CssBaseline } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  //<React.StrictMode> // MAKES EVERYTHING RENDER TWICE!\n  <CssBaseline>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </CssBaseline>,\n  //</React.StrictMode>\n  document.getElementById('root')\n)\n//<App />","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\nexport const alerts = {\n  authFailure: { message: 'Authentication failed. Please log in again.', type: 'error' },\n  authSuccess: { message: 'Authentication succeeded.', type: 'success' },\n  loginSuccess: { message: 'Logged in.', type: 'success' },\n  loginFailure: { message: 'Invalid credentials.', type: 'error' },\n  welcome: { message: 'Welcome!', type: 'success' },\n  songCreated: { message: 'Song created.', type: 'success' },\n  songSaved: { message: 'Song saved.', type: 'success' },\n  logout: { message: 'Logged out.', type: 'success' },\n  signupSuccess: { message: 'Signup successful! You can now log in.', type: 'success' },\n  signupFailure: { message: 'Username is already taken!', type: 'error' },\n}\n\nconst initialState = {\n  message: '',\n  type: '',\n  open: false,\n}\n\nconst alertReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SHOW_ALERT:\n    console.log('Alert reducer show', { ...action.data, open: true })\n    return { ...action.data, open: true }\n  case HIDE_ALERT:\n    console.log('Alert reducer hide')\n    return { ...state, open: false }\n  default:\n    return state\n  }\n}\n\nexport const showAlert = (alert) => {\n  console.log('Creating alert', alert)\n  return (dispatch) => {\n    dispatch({\n      type: SHOW_ALERT,\n      data: { ...alert }\n    })\n  }\n}\n\nexport const hideAlert = () => { // EDIT simpler\n  console.log('Hiding alert')\n  return (dispatch) => {\n    dispatch({\n      type: HIDE_ALERT\n    })\n  }\n}\n\nexport default alertReducer","import axios from 'axios'\nconst url = '/api/token'\n\nconst authenticate = async (username, password) => {\n  const res = await axios.post(url, { username, password })\n  return res.data\n}\n\nexport default { authenticate }","import authService from '../services/authService'\nimport { showAlert, alerts } from './alertReducer'\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const LOGIN_WITH_TOKEN = 'LOGIN_WITH_TOKEN'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const AUTH_FAILURE = 'AUTH_FAILURE'\n\nconst initialState = {\n  loginInProgress: false,\n  loggedIn: false,\n  user: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case LOGIN_REQUEST:\n    return { ...state, loginInProgress: true }\n  case LOGIN_SUCCESS:\n    return { loginInProgress: false, loggedIn: true, user: action.data }\n  case LOGIN_FAILURE:\n    return initialState\n  case LOGIN_WITH_TOKEN:\n    return { loginInProgress: false, loggedIn: true, user: action.data }\n  case LOGOUT_SUCCESS:\n    return initialState\n  case AUTH_FAILURE:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const login = (username, password) => {\n  console.log('logging in user:', username)\n  return async (dispatch) => {\n    dispatch({\n      type: LOGIN_REQUEST,\n      data: { username, password }\n    })\n    try {\n      const user = await authService.authenticate(username, password)\n      localStorage.setItem('SongWriterUser', JSON.stringify(user))\n      dispatch({\n        type: LOGIN_SUCCESS,\n        data: user\n      })\n      dispatch(showAlert(alerts.loginSuccess))\n    } catch (error) {\n      console.log('Login failed')\n      dispatch({\n        type: LOGIN_FAILURE\n      })\n      dispatch(showAlert(alerts.loginFailure))\n    }\n  }\n}\n\nexport const loginWithToken = (user) => {\n  console.log('auto-login for', user)\n  return (dispatch) => {\n    dispatch({\n      type: LOGIN_WITH_TOKEN,\n      data: user\n    })\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('SongWriterUser')\n  return (dispatch) => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    })\n  }\n}\n\nexport const authFailure = () => {\n  localStorage.removeItem('SongWriterUser')\n  return (dispatch) => {\n    dispatch({\n      type: AUTH_FAILURE\n    })\n  }\n}\n\nexport default authReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport songReducer from './songReducer'\nimport snapshotReducer from './snapshotReducer'\nimport authReducer from './authReducer'\nimport alertReducer from './alertReducer'\n\nconst composeEnhancers = composeWithDevTools({ trace: true })\n\nconst reducers = combineReducers({\n  songs: songReducer,\n  snapshot: snapshotReducer,\n  auth: authReducer,\n  alert: alertReducer\n})\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","const linesArrayToString = (lines) => {\n  let string = ''\n  for (let i = 0; i < lines.length; i++) {\n    string = string.concat(lines[i])\n    if (i + 1 < lines.length) {  // If it's not the last line, add a newline\n      string = string.concat('\\n')\n    }\n  }\n  return string\n}\n\nconst linesStringToArray = (string) => {\n  const array = cutStringIntoLines(string)\n    .map(line => line = line.trim())\n    .filter(line => line !== '')\n\n  //console.log('Trimmed lines:', array)\n  return array\n}\n\nconst lineCount = (string) => {\n  return cutStringIntoLines(string).size\n}\n\nconst cutStringIntoLines = (string) => {\n  //console.log('Cutting:', string)\n  const cutLines = string.match(/[^\\r\\n]+/g)\n  return cutLines ? cutLines : []\n}\n\nconst getDefaultSong = (user) => {\n  return {\n    title: 'New song',\n    sections: [\n      getDefaultSection()\n    ],\n    username: user ? user.username : null\n  }\n}\n\nconst getDefaultSection = () => {\n  return {\n    id: 1,\n    name: 'New section',\n    lines: []\n  }\n}\n\nconst createNewSectionId = (song) => {\n  if (song.sections.length === 0) {\n    return 1\n  }\n  let maxId = song.sections.map(s => s.id).reduce((max, current) => current > max ? current : max) // Find the previously highest section id\n  return maxId + 1\n}\n\nconst createNewSection = (song) => {\n  if (song.sections.length === 0) {\n    return getDefaultSection()\n  }\n\n  const newSection = {\n    ...getDefaultSection(),\n    id: createNewSectionId(song),\n  }\n\n  return newSection\n}\n\nconst addNewSection = (song) => {\n  const newSection = createNewSection(song)\n  song.sections.push(newSection) // modifies the song directly\n  return song\n}\n\nconst cloneAndAddSection = (song, section) => {\n  const newSection = { ...section, id: createNewSectionId(song) }\n  return { ...song, sections: [...song.sections, newSection] }\n}\n\n\n\nexport default { linesArrayToString, linesStringToArray, lineCount, getDefaultSong, addNewSection, createNewSection, cloneAndAddSection }","import axios from 'axios'\nimport store from '../redux/store'\nimport { authFailure } from '../redux/authReducer'\nimport { showAlert, alerts } from '../redux/alertReducer'\n\nconst instance = axios.create()\n\ninstance.interceptors.response.use((res) => {\n  return res\n}, (error) => {\n  if (error.response.status === 401) {\n    console.log(error.response.message)\n    store.dispatch(authFailure())\n    store.dispatch(showAlert(alerts.authFailure))\n  }\n  return Promise.reject(error.message)\n})\n\nexport default instance","export const getAuthHeader = () => {\n  const user = JSON.parse(localStorage.getItem('SongWriterUser'))\n  if (user && user.token) {\n    return { 'Authorization': `Bearer ${user.token}` }\n  }\n  return {}\n}\n","import axios from './config'\nimport { getAuthHeader } from '../helpers/auth'\nconst url = '/api/songs/'\n\nconst getAuthConfig = () => {\n  return { headers: getAuthHeader() }\n}\n\nconst getAll = async (user) => {\n  console.log('Getting songs...')\n  const res = await axios.get(url, { ...getAuthConfig(), params: user })\n  return res.data\n}\n\nconst getOne = async (id) => {\n  const res = await axios.get(url + id, getAuthConfig())\n  return res.data\n}\n\nconst create = async (songObjectWithUser) => {\n  console.log('Creating new song...')\n  const res = await axios.post(url, songObjectWithUser, getAuthConfig())\n  return res.data\n}\n\nconst edit = async (songObject) => {\n  const res = await axios.put(url + songObject.id, songObject, getAuthConfig())\n  return res.data\n}\n\nconst destroy = async (id) => {\n  console.log('Deleting song with id:', id)\n  const res = await axios.delete(url + id, getAuthConfig())\n  return res.data\n}\n\nexport default { getAll, getOne, create, edit, destroy }","import songService from '../services/songService'\nimport songHelper from '../helpers/songHelper'\n\n// Action types\nexport const INIT_SONGS = 'INIT_SONGS'\nexport const CREATE_SONG = 'CREATE_SONG'\nexport const EDIT_SONG = 'EDIT_SONG'\nexport const ADD_SECTION = 'ADD_SECTION'\nexport const DELETE_SONG = 'DELETE_SONG'\nexport const EDIT_SECTION = 'EDIT_SECTION'\nexport const DELETE_SECTION = 'DELETE_SECTION'\nexport const CLONE_SECTION = 'CLONE_SECTION'\n\n\n// Reducer\nconst songReducer = (state = [], action) => {\n  switch (action.type) {\n  case INIT_SONGS:\n    return action.data\n  case CREATE_SONG: {\n    const newState = state.concat(action.data)\n    return newState\n  }\n  case EDIT_SONG: {\n    const id = action.data.id\n    return state.map(song => song.id !== id ? song : action.data)\n  }\n  case DELETE_SONG:\n    return state.filter(song => song.id !== action.data.id)\n  case EDIT_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.map(section => section.id !== sectionId ? section : action.data.section)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case DELETE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.filter(section => section.id !== sectionId)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case CLONE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const section = song.sections.find(s => s.id === sectionId)\n    const newSong = songHelper.cloneAndAddSection(song, section) // Does not mutate\n    return state.map(s => s.id !== songId ? s : newSong)\n  }\n  default:\n    return state\n  }\n}\n\n// Song action creators\nexport const createSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const createdSong = await songService.create(song)\n      console.log('Created:', createdSong)\n      dispatch({\n        type: CREATE_SONG,\n        data: createdSong\n      })\n      return createdSong\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const editTitle = (song, title) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.title = title\n\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\n\nexport const initializeSongs = (user) => {\n  return async (dispatch) => {\n    try {\n      console.log('user:', user)\n      const songs = await songService.getAll(user)\n      console.log('Initialized:', songs)\n      dispatch({\n        type: INIT_SONGS,\n        data: songs\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const returnValue = await songService.destroy(song.id)\n      console.log('Destroy returned:', returnValue)\n      dispatch({\n        type: DELETE_SONG,\n        data: song\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const saveSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const savedSong = await songService.edit(song)\n      dispatch({\n        type: EDIT_SONG,\n        data: savedSong\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const getSongFromSnapshot = (snapshot) => {\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: snapshot\n    })\n  }\n}\n\n// Section action creators\nexport const editSection = (songId, section) => {\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const deleteSection = (songId, section) => {\n  return async (dispatch) => {\n    dispatch({\n      type: DELETE_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const addSection = (song) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch = songHelper.addNewSection(songToDispatch)\n\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport const cloneSection = (songId, section) => {\n  return (dispatch) => {\n    dispatch({\n      type: CLONE_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const sortSections = (song, sortedSections) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.sections = sortedSections\n\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport default songReducer","export const SAVE_SNAPSHOT = 'SAVE_SNAPSHOT'\nexport const RESET_SNAPSHOT = 'RESET_SNAPSHOT'\n\nconst initialState = {} // Might upgrade to array at some point, maybe store in the database? (like version history)\n\nconst snapshotReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SAVE_SNAPSHOT:\n    return action.data\n  case RESET_SNAPSHOT:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const saveSnapshot = (song) => {\n  console.log('Saving snapshot:', song)\n  return (dispatch) => {\n    dispatch({\n      type: SAVE_SNAPSHOT,\n      data: song\n    })\n  }\n}\n\nexport const resetSnapshot = () => {\n  console.log('Resetting snapshot')\n  return (dispatch) => {\n    dispatch({\n      type: RESET_SNAPSHOT\n    })\n  }\n}\n\nexport default snapshotReducer\n"],"sourceRoot":""}