{"version":3,"sources":["redux/alertReducer.js","components/LoadingScreen.js","components/SnackbarAlert.js","components/app/App.js","index.js","services/authService.js","redux/authReducer.js","redux/store.js","components/songs/Chord.js","helpers/songHelper.js","services/config.js","services/songService.js","redux/songReducer.js","redux/statusReducer.js","helpers/auth.js","redux/errorReducer.js","redux/snapshotReducer.js"],"names":["alerts","authFailure","message","type","authSuccess","loginSuccess","loginFailure","welcome","songCreated","songSaved","logout","signupSuccess","signupFailure","validationFailure","serverFailure","dataDesync","initialState","open","showAlert","alert","data","hideAlert","alertReducer","state","action","useStyles","makeStyles","root","marginTop","text","marginBottom","LoadingScreen","classes","Container","align","className","Typography","component","variant","CircularProgress","size","thickness","SnackbarAlert","dispatch","useDispatch","useSelector","handleClose","event","reason","Snackbar","autoHideDuration","onClose","style","Alert","severity","AuthenticatedApp","React","lazy","a","UnauthenticatedApp","App","user","auth","darkMode","statuses","useEffect","jsonUser","localStorage","getItem","console","log","authUser","JSON","parse","loginWithToken","lightTheme","createMuiTheme","darkTheme","palette","background","default","primary","main","dark","light","secondary","ThemeProvider","theme","CssBaseline","fallback","ReactDOM","render","store","document","getElementById","authenticate","username","password","axios","post","res","loginInProgress","loggedIn","login","authService","setItem","stringify","removeItem","authReducer","composeEnhancers","composeWithDevTools","trace","reducers","combineReducers","songs","songReducer","snapshot","snapshotReducer","errors","errorReducer","statusReducer","createStore","applyMiddleware","thunk","chord","backgroundColor","grey","marginLeft","marginRight","padding","paddingLeft","paddingRight","borderColor","borderWidth","borderStyle","borderRadius","display","fontSize","color","common","black","Chord","chordString","cutStringIntoLines","string","cutLines","match","getDefaultSection","id","name","lines","createNewSectionId","song","sections","length","map","s","reduce","max","current","createNewSection","linesArrayToString","i","concat","linesStringToArray","lineCount","getDefaultSong","title","addNewSection","newSection","push","cloneAndAddSection","section","validateLines","array","addChordsToLine","rawLine","rawChords","line","replace","reactStringReplace","index","key","substring","instance","create","interceptors","response","use","error","status","Promise","reject","url","getAuthConfig","headers","getAuthHeader","getAll","get","params","getOne","songObjectWithUser","edit","songObject","put","destroy","delete","createSong","songService","createdSong","cloneSong","rawClone","editTitle","songToDispatch","initializeSongs","deleteSong","sortSongs","sortedSongs","saveSong","getSongFromSnapshot","editSection","songId","deleteSection","addSection","songHelper","cloneSection","sortSections","sortedSections","newState","filter","sectionId","find","editedSections","newSong","editMode","chords","toggleEditMode","toggleChords","resetSongStatuses","toggleDarkMode","token","SONG_TITLE_ERROR","SECTION_NAME_ERROR","SECTION_LINES_ERROR","createError","removeError","e","saveSnapshot","resetSnapshot"],"mappings":"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","file":"static/js/main.1ec2417a.chunk.js","sourcesContent":["export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\nexport const alerts = {\n  authFailure: { message: 'Authentication failed. Please log in again.', type: 'error' },\n  authSuccess: { message: 'Authentication succeeded.', type: 'success' },\n  loginSuccess: { message: 'Logged in.', type: 'success' },\n  loginFailure: { message: 'Invalid credentials.', type: 'error' },\n  welcome: { message: 'Welcome!', type: 'success' },\n  songCreated: { message: 'Song created.', type: 'success' },\n  songSaved: { message: 'Song saved.', type: 'success' },\n  logout: { message: 'Logged out.', type: 'success' },\n  signupSuccess: { message: 'Signup successful! You can now log in.', type: 'success' },\n  signupFailure: { message: 'Username is already taken!', type: 'error' },\n  validationFailure: { message: 'Saving failed due to invalid input data.', type: 'error' },\n  serverFailure: { message: 'Error communicating with the server. Check your internet connection and try again.', type: 'error' },\n  dataDesync: { message: 'Local data differs from server data. Please refresh the page.', type: 'error' }\n}\n\nconst initialState = {\n  message: '',\n  type: '',\n  open: false,\n}\n\nconst alertReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SHOW_ALERT:\n    return { ...action.data, open: true }\n  case HIDE_ALERT:\n    return { ...state, open: false }\n  default:\n    return state\n  }\n}\n\nexport const showAlert = (alert) => {\n  return {\n    type: SHOW_ALERT,\n    data: { ...alert }\n  }\n}\n\nexport const hideAlert = () => {\n  return {\n    type: HIDE_ALERT\n  }\n}\n\nexport default alertReducer","import React from 'react'\nimport { Container, CircularProgress, makeStyles, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 114, // 64 (navbar) + 20 (container padding) + 30 (login header top margin)\n  },\n  text: {\n    marginBottom: 15\n  }\n}))\n\nconst LoadingScreen = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <Container align='center' className={classes.root}>\n        <Typography component='h1' variant='h4' className={classes.text}>\n          Loading\n        </Typography>\n        <CircularProgress size={70} thickness={4}/>\n      </Container>\n    </div>\n  )\n}\n\nexport default LoadingScreen","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { hideAlert } from '../redux/alertReducer'\n\n//const Alert = (props) => {\n//  return <MuiAlert elevation={6} variant='filled' {...props} />\n//}\n\n\nconst SnackbarAlert = () => {\n\n  const dispatch = useDispatch()\n\n  const alert = useSelector((state) => state.alert)\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'clickaway') {\n      dispatch(hideAlert())\n    }\n  }\n\n  return (\n    <Snackbar\n      open={alert.open}\n      autoHideDuration={5000}\n      onClose={handleClose}\n      style={{ marginBottom: 5 }}\n    >\n      <Alert\n        variant='filled'\n        onClose={handleClose}\n        severity={alert.type}\n      >\n        {alert.message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default SnackbarAlert","import React, { useEffect, Suspense } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginWithToken } from '../../redux/authReducer'\nimport LoadingScreen from '../LoadingScreen'\nimport SnackbarAlert from '../SnackbarAlert'\nimport { CssBaseline } from '@material-ui/core'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nconst AuthenticatedApp = React.lazy(async () => await import('./AuthenticatedApp'))\nconst UnauthenticatedApp = React.lazy(async () => await import('./UnauthenticatedApp'))\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector((state) => state.auth.user)\n  const darkMode = useSelector((state) => state.statuses.darkMode)\n\n  useEffect(() => {\n    const jsonUser = localStorage.getItem('SongWriterUser')\n    console.log('Getting user effect')\n    if (jsonUser) {\n      const authUser = JSON.parse(jsonUser)\n      dispatch(loginWithToken(authUser))\n    }\n  }, [dispatch])\n\n  const lightTheme = createMuiTheme({})\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      background: {\n        default: '#1c1c1c',\n        //paper:\n      },\n      primary: {\n        main: '#2a367b',\n        dark: '#222c64',\n        light: lightTheme.palette.primary.main\n      },\n      secondary: {\n        main: '#84002f',\n        dark: '#620023',\n        light: lightTheme.palette.primary.main\n      }\n    }\n  })\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <CssBaseline>\n        <Suspense fallback={<LoadingScreen />}>\n          {user ?\n            <AuthenticatedApp/> :\n            <UnauthenticatedApp />\n          }\n        </Suspense>\n        <SnackbarAlert />\n      </CssBaseline>\n    </ThemeProvider>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/app/App'\nimport { CssBaseline } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\n\nReactDOM.render(\n  //<React.StrictMode> // MAKES EVERYTHING RENDER TWICE!\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  //</React.StrictMode>\n  document.getElementById('root')\n)\n//<App />","import axios from 'axios'\nconst url = '/api/token'\n\nconst authenticate = async (username, password) => {\n  const res = await axios.post(url, { username, password })\n  return res.data\n}\n\nexport default { authenticate }","import authService from '../services/authService'\nimport { showAlert, alerts } from './alertReducer'\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const LOGIN_WITH_TOKEN = 'LOGIN_WITH_TOKEN'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const AUTH_FAILURE = 'AUTH_FAILURE'\n\nconst initialState = {\n  loginInProgress: false,\n  loggedIn: false,\n  user: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case LOGIN_REQUEST:\n    return { ...state, loginInProgress: true }\n  case LOGIN_SUCCESS:\n    return { loginInProgress: false, loggedIn: true, user: action.data }\n  case LOGIN_FAILURE:\n    return initialState\n  case LOGIN_WITH_TOKEN:\n    return { loginInProgress: false, loggedIn: true, user: action.data }\n  case LOGOUT_SUCCESS:\n    return initialState\n  case AUTH_FAILURE:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const login = (username, password) => {\n  console.log('logging in user:', username)\n  return async (dispatch) => {\n    dispatch({\n      type: LOGIN_REQUEST,\n      data: { username, password }\n    })\n    try {\n      const user = await authService.authenticate(username, password)\n      localStorage.setItem('SongWriterUser', JSON.stringify(user))\n      dispatch({\n        type: LOGIN_SUCCESS,\n        data: user\n      })\n      dispatch(showAlert(alerts.loginSuccess))\n    } catch (error) {\n      console.log('Login failed')\n      dispatch({\n        type: LOGIN_FAILURE\n      })\n      dispatch(showAlert(alerts.loginFailure))\n    }\n  }\n}\n\nexport const loginWithToken = (user) => {\n  console.log('auto-login for', user)\n  return {\n    type: LOGIN_WITH_TOKEN,\n    data: user\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('SongWriterUser')\n  return {\n    type: LOGOUT_SUCCESS\n  }\n}\n\nexport const authFailure = () => {\n  localStorage.removeItem('SongWriterUser')\n  return {\n    type: AUTH_FAILURE\n  }\n}\n\nexport default authReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport songReducer from './songReducer'\nimport snapshotReducer from './snapshotReducer'\nimport authReducer from './authReducer'\nimport alertReducer from './alertReducer'\nimport errorReducer from './errorReducer'\nimport statusReducer from './statusReducer'\n\nconst composeEnhancers = composeWithDevTools({ trace: true })\n\nconst reducers = combineReducers({\n  songs: songReducer,\n  snapshot: snapshotReducer,\n  auth: authReducer,\n  alert: alertReducer,\n  errors: errorReducer,\n  statuses: statusReducer\n})\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  chord: {\n    backgroundColor: theme.palette.grey[400],\n    marginBottom: -20,\n    marginLeft: 1,\n    marginRight: 1,\n    padding: 1,\n    paddingLeft: 3,\n    paddingRight: 3,\n    borderColor: theme.palette.primary.main,\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    display: 'inline-block',\n    fontSize: '85%',\n    color: theme.palette.common.black\n  }\n}))\n\nconst Chord = ({ chordString }) => {\n  const classes = useStyles()\n\n  // TODO: Add a onHover tooltip that shows chord diagram, if possible?\n  return (\n    <span className={classes.chord}>\n      {chordString}\n    </span>\n  )\n}\n\nChord.propTypes = {\n  chordString: PropTypes.string.isRequired\n}\n\nexport default Chord","import React from 'react'\nimport Chord from '../components/songs/Chord'\nimport reactStringReplace from 'react-string-replace'\n\nconst linesArrayToString = (lines) => {\n  let string = ''\n  for (let i = 0; i < lines.length; i++) {\n    string = string.concat(lines[i])\n    if (i + 1 < lines.length) {  // If it's not the last line, add a newline\n      string = string.concat('\\n')\n    }\n  }\n  return string\n}\n\nconst linesStringToArray = (string) => {\n  const array = cutStringIntoLines(string)\n  //.map(line => line = line.trim())\n  //.filter(line => line !== '')\n\n  //console.log('Trimmed lines:', array)\n  return array\n}\n\nconst validateLines = (array) => {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i].length > 200) {\n      return false\n    }\n  }\n  return true\n}\n\nconst lineCount = (string) => {\n  return cutStringIntoLines(string).size\n}\n\nconst cutStringIntoLines = (string) => {\n  //console.log('Cutting:', string)\n  const cutLines = string.match(/[^\\r\\n]+/g)\n  return cutLines ? cutLines : []\n}\n\nconst getDefaultSong = (user) => {\n  return {\n    title: 'New song',\n    sections: [\n      getDefaultSection()\n    ],\n    username: user ? user.username : null\n  }\n}\n\nconst getDefaultSection = () => {\n  return {\n    id: 1,\n    name: 'New section',\n    lines: []\n  }\n}\n\nconst createNewSectionId = (song) => {\n  if (song.sections.length === 0) {\n    return 1\n  }\n  let maxId = song.sections.map(s => s.id).reduce((max, current) => current > max ? current : max) // Find the previously highest section id\n  return maxId + 1\n}\n\nconst createNewSection = (song) => {\n  if (song.sections.length === 0) {\n    return getDefaultSection()\n  }\n\n  const newSection = {\n    ...getDefaultSection(),\n    id: createNewSectionId(song),\n  }\n\n  return newSection\n}\n\nconst addNewSection = (song) => {\n  const newSection = createNewSection(song)\n  song.sections.push(newSection) // modifies the song directly\n  return song\n}\n\nconst cloneAndAddSection = (song, section) => {\n  const newSection = { ...section, id: createNewSectionId(song) }\n  return { ...song, sections: [...song.sections, newSection] }\n}\n\nconst addChordsToLine = (rawLine) => {\n  const rawChords = rawLine.match(/\\[([^\\]]+)\\]/gm)\n  let line = rawLine.replace(/ /g, '\\u00a0')\n  if (rawChords) {\n    for (let i = 0; i < rawChords.length; i++) {\n      line = reactStringReplace(line, rawChords[i], (match, index) => {\n        return <Chord key={rawChords[i] + index} chordString={match.substring(1, match.length - 1)} />\n      })\n    }\n  }\n  return line\n}\n\n\n\nexport default {\n  linesArrayToString,\n  linesStringToArray,\n  lineCount,\n  getDefaultSong,\n  addNewSection,\n  createNewSection,\n  cloneAndAddSection,\n  validateLines,\n  addChordsToLine\n}","import axios from 'axios'\nimport store from '../redux/store'\nimport { authFailure } from '../redux/authReducer'\nimport { showAlert, alerts } from '../redux/alertReducer'\n\nconst instance = axios.create()\n\ninstance.interceptors.response.use((res) => {\n  return res\n}, (error) => {\n  if (error.response.status === 401) {\n    console.log(error.response.message)\n    store.dispatch(authFailure())\n    store.dispatch(showAlert(alerts.authFailure))\n  } else if (error.response.status === 500) {\n    console.log(error.response.message)\n    store.dispatch(showAlert(alerts.serverFailure))\n  }\n  return Promise.reject(error.message)\n})\n\nexport default instance","import axios from './config'\nimport { getAuthHeader } from '../helpers/auth'\nconst url = '/api/songs/'\n\nconst getAuthConfig = () => {\n  return { headers: getAuthHeader() }\n}\n\nconst getAll = async (user) => {\n  console.log('Getting songs...')\n  const res = await axios.get(url, { ...getAuthConfig(), params: user })\n  return res.data\n}\n\nconst getOne = async (id) => {\n  const res = await axios.get(url + id, getAuthConfig())\n  return res.data\n}\n\nconst create = async (songObjectWithUser) => {\n  console.log('Creating new song...')\n  const res = await axios.post(url, songObjectWithUser, getAuthConfig())\n  return res.data\n}\n\nconst edit = async (songObject) => {\n  const res = await axios.put(url + songObject.id, songObject, getAuthConfig())\n  return res.data\n}\n\nconst destroy = async (id) => {\n  console.log('Deleting song with id:', id)\n  const res = await axios.delete(url + id, getAuthConfig())\n  return res.data\n}\n\nexport default { getAll, getOne, create, edit, destroy }","import songService from '../services/songService'\nimport songHelper from '../helpers/songHelper'\nimport { showAlert, alerts } from './alertReducer'\n\n// Action types\nexport const INIT_SONGS = 'INIT_SONGS'\nexport const CREATE_SONG = 'CREATE_SONG'\nexport const EDIT_SONG = 'EDIT_SONG'\nexport const ADD_SECTION = 'ADD_SECTION'\nexport const DELETE_SONG = 'DELETE_SONG'\nexport const EDIT_SECTION = 'EDIT_SECTION'\nexport const DELETE_SECTION = 'DELETE_SECTION'\nexport const CLONE_SECTION = 'CLONE_SECTION'\nexport const SORT_SONGS = 'SORT_SONGS'\n\n\n// Reducer\nconst songReducer = (state = [], action) => {\n  switch (action.type) {\n  case INIT_SONGS:\n    return action.data\n  case CREATE_SONG: {\n    const newState = state.concat(action.data)\n    return newState\n  }\n  case EDIT_SONG: {\n    const id = action.data.id\n    return state.map(song => song.id !== id ? song : action.data)\n  }\n  case SORT_SONGS:\n    return action.data\n  case DELETE_SONG:\n    return state.filter(song => song.id !== action.data.id)\n  case EDIT_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.map(section => section.id !== sectionId ? section : action.data.section)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case DELETE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.filter(section => section.id !== sectionId)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case CLONE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const section = song.sections.find(s => s.id === sectionId)\n    const newSong = songHelper.cloneAndAddSection(song, section) // Does not mutate\n    return state.map(s => s.id !== songId ? s : newSong)\n  }\n  default:\n    return state\n  }\n}\n\n// Song action creators\nexport const createSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const createdSong = await songService.create(song)\n      dispatch({\n        type: CREATE_SONG,\n        data: createdSong\n      })\n      return createdSong\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const cloneSong = (song, username) => {\n  const rawClone = {\n    title: song.title,\n    sections: [...song.sections],\n    username: username\n  }\n  return createSong(rawClone)\n}\n\nexport const editTitle = (song, title) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.title = title\n\n  return {\n    type: EDIT_SONG,\n    data: songToDispatch\n  }\n}\n\nexport const initializeSongs = (user) => {\n  return async (dispatch) => {\n    try {\n      const songs = await songService.getAll(user)\n      dispatch({\n        type: INIT_SONGS,\n        data: songs\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteSong = (song) => {\n  return async (dispatch) => {\n    try {\n      await songService.destroy(song.id)\n      dispatch({\n        type: DELETE_SONG,\n        data: song\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const sortSongs = (sortedSongs) => {\n  return {\n    type: SORT_SONGS,\n    data: sortedSongs\n  }\n}\n\nexport const saveSong = (song) => {\n  return async (dispatch) => {\n    try {\n      await songService.edit(song)\n    } catch (error) {\n      dispatch(showAlert(alerts.validationFailure))\n    }\n  }\n}\n\nexport const getSongFromSnapshot = (snapshot) => {\n  return {\n    type: EDIT_SONG,\n    data: snapshot\n  }\n}\n\n// Section action creators\nexport const editSection = (songId, section) => {\n  return {\n    type: EDIT_SECTION,\n    data: { songId, section }\n  }\n}\n\nexport const deleteSection = (songId, section) => {\n  return {\n    type: DELETE_SECTION,\n    data: { songId, section }\n  }\n}\n\nexport const addSection = (song) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch = songHelper.addNewSection(songToDispatch)\n\n  return {\n    type: EDIT_SONG,\n    data: songToDispatch\n  }\n}\n\nexport const cloneSection = (songId, section) => {\n  return {\n    type: CLONE_SECTION,\n    data: { songId, section }\n  }\n}\n\nexport const sortSections = (song, sortedSections) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.sections = sortedSections\n\n  return {\n    type: EDIT_SONG,\n    data: songToDispatch\n  }\n}\n\nexport default songReducer","export const TOGGLE_EDIT_MODE = 'TOGGLE_EDIT_MODE'\nexport const TOGGLE_CHORDS = 'TOGGLE_CHORDS'\nexport const RESET_SONG_STATUSES = 'RESET_SONG_STATUSES'\nexport const RESET_ALL_STATUSES = 'RESET_ALL_STATUSES'\nexport const TOGGLE_DARK_MODE = 'TOGGLE_DARK_MODE'\n\n\nconst initialState = {\n  editMode: false,\n  chords: true,\n  darkMode: true\n}\n\n// Statuses aka boolean variables reflecting different UI-only states\nconst statusReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case TOGGLE_EDIT_MODE:\n    return { ...state, editMode: !state.editMode }\n  case TOGGLE_CHORDS:\n    return { ...state, chords: !state.chords }\n  case RESET_SONG_STATUSES:\n    return {\n      ...state,\n      editMode: initialState.editMode,\n      chords: initialState.chords\n    }\n  case TOGGLE_DARK_MODE:\n    return { ...state, darkMode: !state.darkMode }\n  case RESET_ALL_STATUSES:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const toggleEditMode = () => {\n  return {\n    type: TOGGLE_EDIT_MODE\n  }\n}\n\nexport const toggleChords = () => {\n  return {\n    type: TOGGLE_CHORDS\n  }\n}\n\nexport const resetSongStatuses = () => {\n  return {\n    type: RESET_SONG_STATUSES\n  }\n}\n\nexport const toggleDarkMode = () => {\n  return {\n    type: TOGGLE_DARK_MODE\n  }\n}\n\nexport const resetAllStatuses = () => {\n  return {\n    type: RESET_ALL_STATUSES\n  }\n}\n\nexport default statusReducer","export const getAuthHeader = () => {\n  const user = JSON.parse(localStorage.getItem('SongWriterUser'))\n  if (user && user.token) {\n    return { 'Authorization': `Bearer ${user.token}` }\n  }\n  return {}\n}\n","export const CREATE_ERROR = 'CREATE_ERROR'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\n\nexport const errors = {\n  SONG_TITLE_ERROR: 'SONG_TITLE_ERROR',\n  SECTION_NAME_ERROR: 'SECTION_NAME_ERROR',\n  SECTION_LINES_ERROR: 'SECTION_LINES_ERROR'\n}\n\nconst errorReducer = (state = [], action) => {\n  switch (action.type) {\n  case CREATE_ERROR:\n    return [...state, action.data] // Can create multiples, should be ok for now\n  case REMOVE_ERROR: {\n    return state.filter(e => !(e.type === action.data.type && e.id === action.data.id)) // Works with null IDs too\n  }\n  default:\n    return state\n  }\n}\n\nexport const createError = (type, id = null) => {\n  return {\n    type: CREATE_ERROR,\n    data: { type, id }\n  }\n}\n\nexport const removeError = (type, id = null) => {\n  return {\n    type: REMOVE_ERROR,\n    data: { type, id }\n  }\n}\n\nexport default errorReducer","export const SAVE_SNAPSHOT = 'SAVE_SNAPSHOT'\nexport const RESET_SNAPSHOT = 'RESET_SNAPSHOT'\n\nconst initialState = {} // Might upgrade to array at some point, maybe store in the database? (like version history)\n\nconst snapshotReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SAVE_SNAPSHOT:\n    return action.data\n  case RESET_SNAPSHOT:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const saveSnapshot = (song) => {\n  return {\n    type: SAVE_SNAPSHOT,\n    data: song\n  }\n}\n\nexport const resetSnapshot = () => {\n  return {\n    type: RESET_SNAPSHOT\n  }\n}\n\nexport default snapshotReducer\n"],"sourceRoot":""}