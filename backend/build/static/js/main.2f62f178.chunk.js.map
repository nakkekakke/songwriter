{"version":3,"sources":["components/LoadingScreen.js","components/SnackbarAlert.js","components/app/App.js","index.js","redux/alertReducer.js","services/authService.js","redux/authReducer.js","redux/store.js","helpers/songHelper.js","services/config.js","services/songService.js","redux/songReducer.js","helpers/auth.js","redux/errorReducer.js","redux/snapshotReducer.js"],"names":["useStyles","makeStyles","root","marginTop","text","marginBottom","LoadingScreen","classes","Container","align","className","Typography","component","variant","CircularProgress","size","thickness","SnackbarAlert","dispatch","useDispatch","alert","useSelector","state","handleClose","event","reason","hideAlert","Snackbar","open","autoHideDuration","onClose","style","Alert","severity","type","message","AuthenticatedApp","React","lazy","a","UnauthenticatedApp","App","user","auth","useEffect","jsonUser","localStorage","getItem","console","log","authUser","JSON","parse","loginWithToken","fallback","ReactDOM","render","CssBaseline","store","document","getElementById","alerts","authFailure","authSuccess","loginSuccess","loginFailure","welcome","songCreated","songSaved","logout","signupSuccess","signupFailure","validationFailure","initialState","showAlert","data","alertReducer","action","authenticate","username","password","axios","post","res","loginInProgress","loggedIn","login","authService","setItem","stringify","removeItem","authReducer","composeEnhancers","composeWithDevTools","trace","reducers","combineReducers","songs","songReducer","snapshot","snapshotReducer","errors","errorReducer","createStore","applyMiddleware","thunk","cutStringIntoLines","string","cutLines","match","getDefaultSection","id","name","lines","createNewSectionId","song","sections","length","map","s","reduce","max","current","createNewSection","linesArrayToString","i","concat","linesStringToArray","line","trim","filter","lineCount","getDefaultSong","title","addNewSection","newSection","push","cloneAndAddSection","section","validateLines","array","instance","create","interceptors","response","use","error","status","Promise","reject","url","getAuthConfig","headers","getAuthHeader","getAll","get","params","getOne","songObjectWithUser","edit","songObject","put","destroy","delete","createSong","songService","createdSong","cloneSong","clone","editTitle","songToDispatch","initializeSongs","deleteSong","returnValue","sortSongs","sortedSongs","saveSong","getSongFromSnapshot","editSection","songId","deleteSection","addSection","songHelper","cloneSection","sortSections","sortedSections","newState","sectionId","find","editedSections","newSong","token","SONG_TITLE_ERROR","SECTION_NAME_ERROR","SECTION_LINES_ERROR","createError","removeError","e","saveSnapshot","resetSnapshot"],"mappings":"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","file":"static/js/main.2f62f178.chunk.js","sourcesContent":["import React from 'react'\nimport { Container, CircularProgress, makeStyles, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 114, // 64 (navbar) + 20 (container padding) + 30 (login header top margin)\n  },\n  text: {\n    marginBottom: 15\n  }\n}))\n\nconst LoadingScreen = () => {\n  const classes = useStyles()\n  return (\n    <div>\n      <Container align='center' className={classes.root}>\n        <Typography component='h1' variant='h4' className={classes.text}>\n          Loading\n        </Typography>\n        <CircularProgress size={70} thickness={4}/>\n      </Container>\n    </div>\n  )\n}\n\nexport default LoadingScreen","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { hideAlert } from '../redux/alertReducer'\n\n//const Alert = (props) => {\n//  return <MuiAlert elevation={6} variant='filled' {...props} />\n//}\n\n\nconst SnackbarAlert = () => {\n\n  const dispatch = useDispatch()\n\n  const alert = useSelector((state) => state.alert)\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'clickaway') {\n      dispatch(hideAlert())\n    }\n  }\n\n  return (\n    <Snackbar\n      open={alert.open}\n      autoHideDuration={5000}\n      onClose={handleClose}\n      style={{ marginBottom: 5 }}\n    >\n      <Alert\n        variant='filled'\n        onClose={handleClose}\n        severity={alert.type}\n      >\n        {alert.message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default SnackbarAlert","import React, { useEffect, Suspense } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginWithToken } from '../../redux/authReducer'\nimport LoadingScreen from '../LoadingScreen'\nimport SnackbarAlert from '../SnackbarAlert'\n\nconst AuthenticatedApp = React.lazy(async () => await import('./AuthenticatedApp'))\nconst UnauthenticatedApp = React.lazy(async () => await import('./UnauthenticatedApp'))\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n  const user = useSelector((state) => state.auth.user)\n\n  useEffect(() => {\n    const jsonUser = localStorage.getItem('SongWriterUser')\n    console.log('Getting user effect')\n    if (jsonUser) {\n      const authUser = JSON.parse(jsonUser)\n      dispatch(loginWithToken(authUser))\n    }\n  }, [dispatch])\n\n  return (\n    <div>\n      <Suspense fallback={<LoadingScreen />}>\n        {user ?\n          <AuthenticatedApp/> :\n          <UnauthenticatedApp />\n        }\n      </Suspense>\n      <SnackbarAlert />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/app/App'\nimport { CssBaseline } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  //<React.StrictMode> // MAKES EVERYTHING RENDER TWICE!\n  <CssBaseline>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </CssBaseline>,\n  //</React.StrictMode>\n  document.getElementById('root')\n)\n//<App />","export const SHOW_ALERT = 'SHOW_ALERT'\nexport const HIDE_ALERT = 'HIDE_ALERT'\n\nexport const alerts = {\n  authFailure: { message: 'Authentication failed. Please log in again.', type: 'error' },\n  authSuccess: { message: 'Authentication succeeded.', type: 'success' },\n  loginSuccess: { message: 'Logged in.', type: 'success' },\n  loginFailure: { message: 'Invalid credentials.', type: 'error' },\n  welcome: { message: 'Welcome!', type: 'success' },\n  songCreated: { message: 'Song created.', type: 'success' },\n  songSaved: { message: 'Song saved.', type: 'success' },\n  logout: { message: 'Logged out.', type: 'success' },\n  signupSuccess: { message: 'Signup successful! You can now log in.', type: 'success' },\n  signupFailure: { message: 'Username is already taken!', type: 'error' },\n  validationFailure: { message: 'Saving failed due to invalid input data.', type: 'error' }\n}\n\nconst initialState = {\n  message: '',\n  type: '',\n  open: false,\n}\n\nconst alertReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SHOW_ALERT:\n    console.log('Alert reducer show', { ...action.data, open: true })\n    return { ...action.data, open: true }\n  case HIDE_ALERT:\n    console.log('Alert reducer hide')\n    return { ...state, open: false }\n  default:\n    return state\n  }\n}\n\nexport const showAlert = (alert) => {\n  console.log('Creating alert', alert)\n  return (dispatch) => {\n    dispatch({\n      type: SHOW_ALERT,\n      data: { ...alert }\n    })\n  }\n}\n\nexport const hideAlert = () => { // EDIT simpler\n  console.log('Hiding alert')\n  return (dispatch) => {\n    dispatch({\n      type: HIDE_ALERT\n    })\n  }\n}\n\nexport default alertReducer","import axios from 'axios'\nconst url = '/api/token'\n\nconst authenticate = async (username, password) => {\n  const res = await axios.post(url, { username, password })\n  return res.data\n}\n\nexport default { authenticate }","import authService from '../services/authService'\nimport { showAlert, alerts } from './alertReducer'\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\nexport const LOGIN_WITH_TOKEN = 'LOGIN_WITH_TOKEN'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const AUTH_FAILURE = 'AUTH_FAILURE'\n\nconst initialState = {\n  loginInProgress: false,\n  loggedIn: false,\n  user: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case LOGIN_REQUEST:\n    return { ...state, loginInProgress: true }\n  case LOGIN_SUCCESS:\n    return { loginInProgress: false, loggedIn: true, user: action.data }\n  case LOGIN_FAILURE:\n    return initialState\n  case LOGIN_WITH_TOKEN:\n    return { loginInProgress: false, loggedIn: true, user: action.data }\n  case LOGOUT_SUCCESS:\n    return initialState\n  case AUTH_FAILURE:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const login = (username, password) => {\n  console.log('logging in user:', username)\n  return async (dispatch) => {\n    dispatch({\n      type: LOGIN_REQUEST,\n      data: { username, password }\n    })\n    try {\n      const user = await authService.authenticate(username, password)\n      localStorage.setItem('SongWriterUser', JSON.stringify(user))\n      dispatch({\n        type: LOGIN_SUCCESS,\n        data: user\n      })\n      dispatch(showAlert(alerts.loginSuccess))\n    } catch (error) {\n      console.log('Login failed')\n      dispatch({\n        type: LOGIN_FAILURE\n      })\n      dispatch(showAlert(alerts.loginFailure))\n    }\n  }\n}\n\nexport const loginWithToken = (user) => {\n  console.log('auto-login for', user)\n  return (dispatch) => {\n    dispatch({\n      type: LOGIN_WITH_TOKEN,\n      data: user\n    })\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('SongWriterUser')\n  return (dispatch) => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    })\n  }\n}\n\nexport const authFailure = () => {\n  localStorage.removeItem('SongWriterUser')\n  return (dispatch) => {\n    dispatch({\n      type: AUTH_FAILURE\n    })\n  }\n}\n\nexport default authReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport songReducer from './songReducer'\nimport snapshotReducer from './snapshotReducer'\nimport authReducer from './authReducer'\nimport alertReducer from './alertReducer'\nimport errorReducer from './errorReducer'\n\nconst composeEnhancers = composeWithDevTools({ trace: true })\n\nconst reducers = combineReducers({\n  songs: songReducer,\n  snapshot: snapshotReducer,\n  auth: authReducer,\n  alert: alertReducer,\n  errors: errorReducer\n})\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","const linesArrayToString = (lines) => {\n  let string = ''\n  for (let i = 0; i < lines.length; i++) {\n    string = string.concat(lines[i])\n    if (i + 1 < lines.length) {  // If it's not the last line, add a newline\n      string = string.concat('\\n')\n    }\n  }\n  return string\n}\n\nconst linesStringToArray = (string) => {\n  const array = cutStringIntoLines(string)\n    .map(line => line = line.trim())\n    .filter(line => line !== '')\n\n  //console.log('Trimmed lines:', array)\n  return array\n}\n\nconst validateLines = (array) => {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i].length > 200) {\n      return false\n    }\n  }\n  return true\n}\n\nconst lineCount = (string) => {\n  return cutStringIntoLines(string).size\n}\n\nconst cutStringIntoLines = (string) => {\n  //console.log('Cutting:', string)\n  const cutLines = string.match(/[^\\r\\n]+/g)\n  return cutLines ? cutLines : []\n}\n\nconst getDefaultSong = (user) => {\n  return {\n    title: 'New song',\n    sections: [\n      getDefaultSection()\n    ],\n    username: user ? user.username : null\n  }\n}\n\nconst getDefaultSection = () => {\n  return {\n    id: 1,\n    name: 'New section',\n    lines: []\n  }\n}\n\nconst createNewSectionId = (song) => {\n  if (song.sections.length === 0) {\n    return 1\n  }\n  let maxId = song.sections.map(s => s.id).reduce((max, current) => current > max ? current : max) // Find the previously highest section id\n  return maxId + 1\n}\n\nconst createNewSection = (song) => {\n  if (song.sections.length === 0) {\n    return getDefaultSection()\n  }\n\n  const newSection = {\n    ...getDefaultSection(),\n    id: createNewSectionId(song),\n  }\n\n  return newSection\n}\n\nconst addNewSection = (song) => {\n  const newSection = createNewSection(song)\n  song.sections.push(newSection) // modifies the song directly\n  return song\n}\n\nconst cloneAndAddSection = (song, section) => {\n  const newSection = { ...section, id: createNewSectionId(song) }\n  return { ...song, sections: [...song.sections, newSection] }\n}\n\n\n\nexport default { linesArrayToString, linesStringToArray, lineCount, getDefaultSong, addNewSection, createNewSection, cloneAndAddSection, validateLines }","import axios from 'axios'\nimport store from '../redux/store'\nimport { authFailure } from '../redux/authReducer'\nimport { showAlert, alerts } from '../redux/alertReducer'\n\nconst instance = axios.create()\n\ninstance.interceptors.response.use((res) => {\n  return res\n}, (error) => {\n  if (error.response.status === 401) {\n    console.log(error.response.message)\n    store.dispatch(authFailure())\n    store.dispatch(showAlert(alerts.authFailure))\n  }\n  return Promise.reject(error.message)\n})\n\nexport default instance","import axios from './config'\nimport { getAuthHeader } from '../helpers/auth'\nconst url = '/api/songs/'\n\nconst getAuthConfig = () => {\n  return { headers: getAuthHeader() }\n}\n\nconst getAll = async (user) => {\n  console.log('Getting songs...')\n  const res = await axios.get(url, { ...getAuthConfig(), params: user })\n  return res.data\n}\n\nconst getOne = async (id) => {\n  const res = await axios.get(url + id, getAuthConfig())\n  return res.data\n}\n\nconst create = async (songObjectWithUser) => {\n  console.log('Creating new song...')\n  const res = await axios.post(url, songObjectWithUser, getAuthConfig())\n  return res.data\n}\n\nconst edit = async (songObject) => {\n  const res = await axios.put(url + songObject.id, songObject, getAuthConfig())\n  return res.data\n}\n\nconst destroy = async (id) => {\n  console.log('Deleting song with id:', id)\n  const res = await axios.delete(url + id, getAuthConfig())\n  return res.data\n}\n\nexport default { getAll, getOne, create, edit, destroy }","import songService from '../services/songService'\nimport songHelper from '../helpers/songHelper'\nimport { showAlert, alerts } from './alertReducer'\n\n// Action types\nexport const INIT_SONGS = 'INIT_SONGS'\nexport const CREATE_SONG = 'CREATE_SONG'\nexport const EDIT_SONG = 'EDIT_SONG'\nexport const ADD_SECTION = 'ADD_SECTION'\nexport const DELETE_SONG = 'DELETE_SONG'\nexport const EDIT_SECTION = 'EDIT_SECTION'\nexport const DELETE_SECTION = 'DELETE_SECTION'\nexport const CLONE_SECTION = 'CLONE_SECTION'\nexport const SORT_SONGS = 'SORT_SONGS'\n\n\n// Reducer\nconst songReducer = (state = [], action) => {\n  switch (action.type) {\n  case INIT_SONGS:\n    return action.data\n  case CREATE_SONG: {\n    const newState = state.concat(action.data)\n    return newState\n  }\n  case EDIT_SONG: {\n    const id = action.data.id\n    return state.map(song => song.id !== id ? song : action.data)\n  }\n  case SORT_SONGS:\n    return action.data\n  case DELETE_SONG:\n    return state.filter(song => song.id !== action.data.id)\n  case EDIT_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.map(section => section.id !== sectionId ? section : action.data.section)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case DELETE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.filter(section => section.id !== sectionId)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case CLONE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const section = song.sections.find(s => s.id === sectionId)\n    const newSong = songHelper.cloneAndAddSection(song, section) // Does not mutate\n    return state.map(s => s.id !== songId ? s : newSong)\n  }\n  default:\n    return state\n  }\n}\n\n// Song action creators\nexport const createSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const createdSong = await songService.create(song)\n      console.log('Created:', createdSong)\n      dispatch({\n        type: CREATE_SONG,\n        data: createdSong\n      })\n      return createdSong\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const cloneSong = (song, username) => {\n  const clone = { title: song.title, sections: [...song.sections], username: username }\n  return createSong(clone)\n}\n\nexport const editTitle = (song, title) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.title = title\n\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport const initializeSongs = (user) => {\n  return async (dispatch) => {\n    try {\n      console.log('user:', user)\n      const songs = await songService.getAll(user)\n      console.log('Initialized:', songs)\n      dispatch({\n        type: INIT_SONGS,\n        data: songs\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const returnValue = await songService.destroy(song.id)\n      console.log('Destroy returned:', returnValue)\n      dispatch({\n        type: DELETE_SONG,\n        data: song\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const sortSongs = (sortedSongs) => {\n  console.log('Sorted:', sortedSongs)\n\n  return {\n    type: SORT_SONGS,\n    data: sortedSongs\n  }\n}\n\nexport const saveSong = (song) => {\n  return async (dispatch) => {\n    try {\n      console.log('Saving')\n      await songService.edit(song)\n    } catch (error) {\n      console.log('tuli errori:', error)\n      dispatch(showAlert(alerts.validationFailure))\n    }\n  }\n}\n\nexport const getSongFromSnapshot = (snapshot) => {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: snapshot\n    })\n  }\n}\n\n// Section action creators\nexport const editSection = (songId, section) => {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const deleteSection = (songId, section) => {\n  return (dispatch) => {\n    dispatch({\n      type: DELETE_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const addSection = (song) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch = songHelper.addNewSection(songToDispatch)\n\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport const cloneSection = (songId, section) => {\n  return (dispatch) => {\n    dispatch({\n      type: CLONE_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const sortSections = (song, sortedSections) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.sections = sortedSections\n\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport default songReducer","export const getAuthHeader = () => {\n  const user = JSON.parse(localStorage.getItem('SongWriterUser'))\n  if (user && user.token) {\n    return { 'Authorization': `Bearer ${user.token}` }\n  }\n  return {}\n}\n","export const CREATE_ERROR = 'CREATE_ERROR'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\n\nexport const errors = {\n  SONG_TITLE_ERROR: 'SONG_TITLE_ERROR',\n  SECTION_NAME_ERROR: 'SECTION_NAME_ERROR',\n  SECTION_LINES_ERROR: 'SECTION_LINES_ERROR'\n}\n\nconst errorReducer = (state = [], action) => {\n  switch (action.type) {\n  case CREATE_ERROR:\n    return [...state, action.data] // Can create multiples, should be ok for now\n  case REMOVE_ERROR: {\n    return state.filter(e => !(e.type === action.data.type && e.id === action.data.id)) // Works with null IDs too\n  }\n  default:\n    return state\n  }\n}\n\nexport const createError = (type, id = null) => {\n  return (dispatch) => {\n    dispatch({\n      type: CREATE_ERROR,\n      data: { type, id }\n    })\n  }\n}\n\nexport const removeError = (type, id = null) => {\n  console.log('Type is:', type, 'id is:', id)\n  return (dispatch) => {\n    dispatch({\n      type: REMOVE_ERROR,\n      data: { type, id }\n    })\n  }\n}\n\nexport default errorReducer","export const SAVE_SNAPSHOT = 'SAVE_SNAPSHOT'\nexport const RESET_SNAPSHOT = 'RESET_SNAPSHOT'\n\nconst initialState = {} // Might upgrade to array at some point, maybe store in the database? (like version history)\n\nconst snapshotReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SAVE_SNAPSHOT:\n    return action.data\n  case RESET_SNAPSHOT:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const saveSnapshot = (song) => {\n  console.log('Saving snapshot:', song)\n  return (dispatch) => {\n    dispatch({\n      type: SAVE_SNAPSHOT,\n      data: song\n    })\n  }\n}\n\nexport const resetSnapshot = () => {\n  console.log('Resetting snapshot')\n  return (dispatch) => {\n    dispatch({\n      type: RESET_SNAPSHOT\n    })\n  }\n}\n\nexport default snapshotReducer\n"],"sourceRoot":""}