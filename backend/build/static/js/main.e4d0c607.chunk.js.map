{"version":3,"sources":["components/NavBar.js","components/songs/SongListItem.js","helpers/songHelper.js","services/songService.js","redux/songReducer.js","components/songs/SongList.js","redux/snapshotReducer.js","components/songs/SongSection.js","components/songs/SongSectionList.js","components/DialogCloseButton.js","components/songs/UnsavedPrompt.js","components/songs/Song.js","components/SnackbarAlert.js","App.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","title","fontSize","paddingRight","buttonsDiv","flex","linkButton","textDecoration","color","padding","NavBar","classes","className","AppBar","position","Toolbar","Typography","Button","component","Link","to","logout","item","SongListItem","song","ListItem","id","divider","cutStringIntoLines","string","cutLines","match","getDefaultSong","sections","name","lines","i","length","concat","map","line","trim","filter","maxId","s","reduce","max","current","newSection","push","url","getAll","a","console","log","axios","get","res","data","getOne","create","songObject","post","edit","put","destroy","delete","editSection","songId","section","dispatch","type","songReducer","state","action","newState","sectionId","find","editedSections","addSongButton","margin","SongList","songs","useSelector","useDispatch","history","useHistory","List","key","variant","startIcon","Add","onClick","songHelper","songService","createdSong","then","catch","e","initialState","resetSnapshot","snapshotReducer","theme","borderWidth","borderStyle","borderRadius","borderColor","palette","primary","main","marginBottom","overflow","whiteSpace","backgroundColor","normalViewRoot","marginTop","editForm","nameField","buttonDiv","display","lineSubmitButton","deleteButton","marginLeft","dragHandle","SongSection","editMode","useState","deleteConfirm","setDeleteConfirm","DragHandle","SortableHandle","Box","Icon","DragIndicator","handleNameChange","event","editedSection","target","value","handleLinesChange","linesArray","handleDeleteClick","preventDefault","deleteSection","TextField","label","defaultValue","onChange","multiline","rows","size","fullWidth","index","SortableItem","SortableElement","SortableList","SortableContainer","Container","maxWidth","align","SongSectionList","handleSortEnd","oldIndex","newIndex","sortedSections","arrayMove","songToDispatch","JSON","parse","stringify","sortSections","onSortEnd","useDragHandle","useWindowAsScrollContainer","closeButton","right","spacing","top","grey","DialogCloseButton","IconButton","Close","UnsavedPrompt","handleSaveAgreeClick","handleSaveDiscardClick","unsavedChanges","handlePromptConfirmSaveClick","onConfirm","handlePromptConfirmDiscardClick","when","isActive","onCancel","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","navPrompt","menuContainer","titleField","addSectionButton","deleteSongButton","dialogCloseButton","Song","setAlertMessage","setAlertIsError","setEditMode","delConfirmOpen","setDelConfirmOpen","saveOpen","setSaveOpen","titleError","setTitleError","useParams","snapshot","handleEditModeEnterClick","saveSnapshot","handleEditModeExitClick","savedSong","saveSong","getSongFromSnapshot","handleTitleChange","editTitle","handleAddSectionClick","addSection","handleDeleteAgreeClick","returnValue","deleteSong","error","helperText","DeleteForever","_","isEmpty","isEqual","SnackbarAlert","message","isError","handleClose","Snackbar","autoHideDuration","Alert","severity","mainContainer","justifyContent","alignItems","contentContainer","App","alertMessage","alertIsError","useEffect","path","reason","composeEnhancers","composeWithDevTools","trace","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e4d0c607.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 20,\n    paddingRight: 15\n  },\n  buttonsDiv: {\n    flex: 1\n  },\n  linkButton: {\n    textDecoration: 'none',\n    color: 'white',\n    padding: 20\n  }\n}))\n\nconst NavBar = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography className={classes.title}>\n            SongWriter\n          </Typography>\n          <div className={classes.buttonsDiv}>\n            <Button component={Link} to={'/songs/'} color='inherit' className={classes.linkButton}>Your songs</Button>\n          </div>\n          <Button color='inherit' className={classes.logout}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport { ListItem, makeStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(() => ({\n  item: {\n\n  }\n}))\n\nconst SongListItem = ({ song }) => {\n  const classes = useStyles()\n\n  return (\n    <ListItem\n      component={Link}\n      to={`/songs/${song.id}`}\n      divider={true}\n      className={classes.item}\n    >\n      <h2>{song.title}</h2>\n    </ListItem>\n  )\n}\n\nSongListItem.propTypes = {\n  song: PropTypes.object.isRequired\n}\n\nexport default SongListItem","const linesArrayToString = (lines) => {\n  let string = ''\n  for (let i = 0; i < lines.length; i++) {\n    string = string.concat(lines[i])\n    if (i + 1 < lines.length) {  // If it's not the last line, add a newline\n      string = string.concat('\\n')\n    }\n  }\n  return string\n}\n\nconst linesStringToArray = (string) => {\n  const array = cutStringIntoLines(string)\n    .map(line => line = line.trim())\n    .filter(line => line !== '')\n\n  //console.log('Trimmed lines:', array)\n  return array\n}\n\nconst lineCount = (string) => {\n  return cutStringIntoLines(string).size\n}\n\nconst cutStringIntoLines = (string) => {\n  //console.log('Cutting:', string)\n  const cutLines = string.match(/[^\\r\\n]+/g)\n  return cutLines ? cutLines : []\n}\n\nconst getDefaultSong = () => {\n  return {\n    title: 'New song',\n    sections: [\n      {\n        id: 1,\n        name: 'New section',\n        lines: []\n      }\n    ]\n  }\n}\n\nconst addNewSection = (song) => {\n  if (song.sections.length === 0) {\n    song.sections = getDefaultSong().sections\n    return song\n  }\n\n  let maxId = song.sections.map(s => s.id).reduce((max, current) => current > max ? current : max) // Find the previously highest section id\n  const newSection = {\n    ...getDefaultSong().sections[0],\n    id: maxId + 1,\n  }\n  song.sections.push(newSection) // modifies the song directly\n  return song\n}\n\n\n\nexport default { linesArrayToString, linesStringToArray, lineCount, getDefaultSong, addNewSection }","import axios from 'axios'\nconst url = '/api/songs/'\n\nconst getAll = async () => {\n  console.log('Getting songs...')\n  const res = await axios.get(url)\n  return res.data\n}\n\nconst getOne = async (id) => {\n  const res = await axios.get(url + id)\n  return res.data\n}\n\nconst create = async (songObject) => {\n  console.log('Creating new song...')\n  const res = await axios.post(url, songObject)\n  return res.data\n}\n\nconst edit = async (songObject) => {\n  const res = await axios.put(url + songObject.id, songObject)\n  return res.data\n}\n\nconst destroy = async (id) => {\n  console.log('Deleting song with id:', id)\n  const res = await axios.delete(url + id)\n  return res.data\n}\n\nexport default { getAll, getOne, create, edit, destroy }","import songService from '../services/songService'\nimport songHelper from '../helpers/songHelper'\n\n// Action types\nexport const INIT_SONGS = 'INIT_SONGS'\nexport const CREATE_SONG = 'CREATE_SONG'\nexport const EDIT_SONG = 'EDIT_SONG'\nexport const ADD_SECTION = 'ADD_SECTION'\nexport const DELETE_SONG = 'DELETE_SONG'\nexport const EDIT_SECTION = 'EDIT_SECTION'\nexport const DELETE_SECTION = 'DELETE_SECTION'\n\n\n// Reducer\nconst songReducer = (state = [], action) => {\n  switch (action.type) {\n  case INIT_SONGS:\n    return action.data\n  case CREATE_SONG: {\n    const newState = state.concat(action.data)\n    return newState\n  }\n  case EDIT_SONG: {\n    console.log('Editing song:', action.data)\n    const id = action.data.id\n    return state.map(song => song.id !== id ? song : action.data)\n  }\n  case DELETE_SONG:\n    return state.filter(song => song.id !== action.data.id)\n  case EDIT_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.map(section => section.id !== sectionId ? section : action.data.section)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  case DELETE_SECTION: {\n    const songId = action.data.songId\n    const sectionId = action.data.section.id\n    const song = state.find(s => s.id === songId)\n    const editedSections = song.sections.filter(section => section.id !== sectionId)\n    return state.map(s => s.id !== songId ? s : { ...song, sections: editedSections })\n  }\n  default:\n    return state\n  }\n}\n\n// Song action creators\nexport const createSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const createdSong = await songService.create(song)\n      console.log('Created:', createdSong)\n      dispatch({\n        type: CREATE_SONG,\n        data: createdSong\n      })\n      return createdSong\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const editTitle = (song, title) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.title = title\n\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\n\nexport const initializeSongs = () => {\n  return async (dispatch) => {\n    try {\n      const songs = await songService.getAll()\n      console.log('Initialized:', songs)\n      dispatch({\n        type: INIT_SONGS,\n        data: songs\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const deleteSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const returnValue = await songService.destroy(song.id)\n      console.log('Destroy returned:', returnValue)\n      dispatch({\n        type: DELETE_SONG,\n        data: song\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\n// Section action creators\nexport const editSection = (songId, section) => {\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const deleteSection = (songId, section) => {\n  return async (dispatch) => {\n    dispatch({\n      type: DELETE_SECTION,\n      data: { songId, section }\n    })\n  }\n}\n\nexport const addSection = (song) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch = songHelper.addNewSection(songToDispatch)\n\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport const sortSections = (song, sortedSections) => {\n  let songToDispatch = JSON.parse(JSON.stringify(song))\n  songToDispatch.sections = sortedSections\n\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: songToDispatch\n    })\n  }\n}\n\nexport const saveSong = (song) => {\n  return async (dispatch) => {\n    try {\n      const savedSong = await songService.edit(song)\n      dispatch({\n        type: EDIT_SONG,\n        data: savedSong\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const getSongFromSnapshot = (snapshot) => {\n  return async (dispatch) => {\n    dispatch({\n      type: EDIT_SONG,\n      data: snapshot\n    })\n  }\n}\n\nexport default songReducer","import React from 'react'\nimport { List, makeStyles, Button } from '@material-ui/core'\nimport SongListItem from './SongListItem'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Add } from '@material-ui/icons'\nimport songHelper from '../../helpers/songHelper'\nimport { createSong } from '../../redux/songReducer'\nimport { useHistory } from 'react-router'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n\n  },\n  addSongButton: {\n    margin: 8\n  }\n}))\n\nconst SongList = () => {\n  const classes = useStyles()\n  const songs = useSelector((state) => state.songs)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  console.log('Rendered', songs.length, 'songs')\n\n  const handleNewSongClick = () => {\n    dispatch(createSong(songHelper.getDefaultSong())) // Note: not error handling createSong\n      .then(res => {\n        history.push('/songs/' + res.id)\n        console.log('Redirected!')\n      })\n      .catch(e => console.log('Error creating new song:', e))\n  }\n\n  const listSongs = () => songs.map(song =>\n    <SongListItem\n      key={song.id}\n      to={`/songs/${song.id}`}\n      song={song}\n    />\n  )\n\n  return (\n    <div className={classes.root}>\n      <h1>Songs</h1>\n      <List>\n        {songs.length !== 0 ? listSongs() : <p>No songs found</p>}\n      </List>\n      <Button\n        className={classes.addSongButton}\n        variant='contained'\n        color='primary'\n        startIcon={<Add />}\n        onClick={handleNewSongClick}\n      >\n        New song\n      </Button>\n    </div>\n  )\n}\n\nexport default SongList","export const SAVE_SNAPSHOT = 'SAVE_SNAPSHOT'\nexport const RESET_SNAPSHOT = 'RESET_SNAPSHOT'\n\nconst initialState = {} // Might upgrade to array at some point, maybe store in the database? (like version history)\n\nconst snapshotReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SAVE_SNAPSHOT:\n    return action.data\n  case RESET_SNAPSHOT:\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const saveSnapshot = (song) => {\n  console.log('Saving snapshot:', song)\n  return (dispatch) => {\n    dispatch({\n      type: SAVE_SNAPSHOT,\n      data: song\n    })\n  }\n}\n\nexport const resetSnapshot = () => {\n  console.log('Resetting snapshot')\n  return (dispatch) => {\n    dispatch({\n      type: RESET_SNAPSHOT\n    })\n  }\n}\n\nexport default snapshotReducer\n","import React, { useState } from 'react'\nimport { makeStyles, TextField, Button, Icon, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport songHelper from '../../helpers/songHelper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editSection, deleteSection } from '../../redux/songReducer'\n\nimport { SortableHandle } from 'react-sortable-hoc'\nimport { DragIndicator } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n  section: {\n    borderWidth: 2,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: theme.palette.primary.main,\n    padding: 20,\n    marginBottom: 3,\n    overflow: 'auto',\n    whiteSpace: 'nowrap',\n    backgroundColor: '#fff'\n  },\n  normalViewRoot: {\n    marginTop: -12,\n    marginBottom: -15\n  },\n  line: {\n    marginTop: -5\n  },\n  editForm: {\n    marginBottom: 15\n  },\n  nameField: {\n    marginBottom: 10\n  },\n  buttonDiv: {\n    display: 'flex'\n  },\n  lineSubmitButton: {\n    marginTop: 10,\n    marginBottom: -25\n  },\n  deleteButton: {\n    marginTop: 10,\n    marginBottom: -25,\n    marginLeft: 'auto'\n  },\n  dragHandle: {\n    marginLeft: 'auto',\n    marginTop: 10,\n    marginBottom: -25,\n  }\n}))\n\nconst SongSection = ({ songId, sectionId, editMode }) => {\n\n\n  // Local states for inputs only\n  //const [name, setName] = useState(section.name)\n  //const [linesString, setLinesString] = useState(songHelper.linesArrayToString(section.lines)) // Lines are a string while in state\n  const [deleteConfirm, setDeleteConfirm] = useState(false)\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const DragHandle = SortableHandle(() => <Box className={classes.dragHandle}> <Icon><DragIndicator /></Icon> </Box>)\n\n  const section = useSelector((state) => state.songs.find(s => s.id === songId).sections.find(s => s.id === sectionId))\n\n  const editView = () => {\n    return (\n      <form className={classes.editForm} >\n        <TextField className={classes.nameField} label='Edit name' name='name' defaultValue={section.name} onChange={handleNameChange} />\n        <div>\n          <TextField\n            multiline\n            label='Lines'\n            name='lines'\n            rows={section.lines.size}\n            defaultValue={songHelper.linesArrayToString(section.lines)}\n            onChange={handleLinesChange}\n            fullWidth={true}\n          />\n        </div>\n        <div className={classes.buttonDiv}>\n          <Button\n            className={classes.lineSubmitButton}\n            size='small'\n            color='primary'\n            variant='outlined'\n            type='submit'\n          >\n            Save\n          </Button>\n          <DragHandle />\n          <Button\n            className={classes.deleteButton}\n            size='small'\n            color='secondary'\n            variant='outlined'\n            onClick={handleDeleteClick}\n          >\n            {deleteConfirm ? 'Confirm deletion' : 'Delete'}\n          </Button>\n        </div>\n      </form>\n    )\n  }\n\n  const normalView = () => {\n    return (\n      <div className={classes.normalViewRoot}>\n        <h2>{section.name}</h2>\n        {section.lines.map((line, index) => {\n          return <p className={classes.line} key={index}>{line}</p>\n        })}\n      </div>\n    )\n  }\n\n  const handleNameChange = (event) => {\n    const editedSection = { ...section, lines: [...section.lines], name: event.target.value }\n    dispatch(editSection(songId, editedSection))\n  }\n\n  const handleLinesChange = (event) => {\n    const linesArray = songHelper.linesStringToArray(event.target.value)\n    const editedSection = { ...section, lines: linesArray }\n    dispatch(editSection(songId, editedSection))\n  }\n\n  const handleDeleteClick = (event) => {\n    event.preventDefault()\n    console.log('Delete button pressed!')\n    if (deleteConfirm) {\n      console.log('Delete for realz')\n      dispatch(deleteSection(songId, section))\n    } else {\n      setDeleteConfirm(true)\n    }\n  }\n\n  return (\n    <div className={classes.section}>\n      {editMode ? editView() : normalView()}\n    </div>\n  )\n}\n\nSongSection.propTypes = {\n  songId: PropTypes.string.isRequired,\n  sectionId: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired\n}\n\nexport default SongSection","import React from 'react'\nimport { makeStyles, Container } from '@material-ui/core'\nimport SongSection from './SongSection'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc'\nimport arrayMove from 'array-move'\nimport { useDispatch } from 'react-redux'\nimport { sortSections } from '../../redux/songReducer'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n\n  }\n}))\n\nconst SortableItem = SortableElement(({ section, song, editMode }) => {\n  return (\n    <SongSection\n      songId={song.id}\n      sectionId={section.id}\n      editMode={editMode}\n    >\n    </SongSection>\n  )\n})\n\nconst SortableList = SortableContainer(({ song, editMode }) => {\n  return (\n    <Container maxWidth={false} align='left'>\n      {song.sections.map((section, index) => {\n        return (\n          <SortableItem\n            key={section.id}\n            index={index}\n            section={section}\n            song={song}\n            editMode={editMode}\n          />\n        )\n      })}\n    </Container>\n  )\n})\n\nconst SongSectionList = ({ song, editMode }) => {\n\n  const dispatch = useDispatch()\n  const classes = useStyles()\n\n  const handleSortEnd = ({ oldIndex, newIndex }) => {\n    const sortedSections = arrayMove(song.sections, oldIndex, newIndex)\n    dispatch(sortSections(song, sortedSections))\n  }\n\n  const renderSections = () => {\n    if (song.sections.length === 0) {\n      return (\n        <Container>\n          <h2>No sections</h2>\n        </Container>\n      )\n    }\n    return (\n      <SortableList\n        song={song}\n        editMode={editMode}\n        onSortEnd={handleSortEnd}\n        useDragHandle\n        useWindowAsScrollContainer\n      />\n    )\n  }\n\n  return (\n    renderSections()\n  )\n}\n\nexport default SongSectionList","import React from 'react'\nimport { makeStyles, IconButton } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n}))\n\nconst DialogCloseButton = ({ onClick }) => {\n  const classes = useStyles()\n\n  return (\n    <IconButton className={classes.closeButton} onClick={onClick}>\n      <Close />\n    </IconButton>\n  )\n}\n\nDialogCloseButton.propTypes = {\n  onClick: PropTypes.func.isRequired\n}\n\nexport default DialogCloseButton","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core'\nimport NavigationPrompt from 'react-router-navigation-prompt'\nimport PropTypes from 'prop-types'\nimport DialogCloseButton from '../DialogCloseButton'\n\nconst UnsavedPrompt = ({ handleSaveAgreeClick, handleSaveDiscardClick, unsavedChanges }) => {\n\n  const navPrompt = (isActive, onCancel, onConfirm) => {\n    return (\n      <Dialog\n        open={isActive}\n        onClose={onCancel}\n      >\n        <DialogTitle>You have unsaved changes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            If you leave without saving, all changes will be lost!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handlePromptConfirmSaveClick(onConfirm)} color='primary' variant='contained'>\n            Save and leave\n          </Button>\n          <Button onClick={handlePromptConfirmDiscardClick(onConfirm)} color='secondary' variant='contained'>\n            Leave without saving\n          </Button>\n          <DialogCloseButton onClick={onCancel} />\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  const handlePromptConfirmSaveClick = (onConfirm) => () => {\n    handleSaveAgreeClick()\n    onConfirm()\n  }\n\n  const handlePromptConfirmDiscardClick = (onConfirm) => () => {\n    handleSaveDiscardClick()\n    onConfirm()\n  }\n\n  return (\n    <NavigationPrompt when={unsavedChanges()}>\n      {({ isActive, onCancel, onConfirm }) => navPrompt(isActive, onCancel, onConfirm) }\n    </NavigationPrompt>\n  )\n}\n\nUnsavedPrompt.propTypes = {\n  handleSaveAgreeClick: PropTypes.func.isRequired,\n  handleSaveDiscardClick: PropTypes.func.isRequired,\n  unsavedChanges: PropTypes.func.isRequired\n}\n\nexport default UnsavedPrompt","import React, { useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { makeStyles, Container, Button, TextField, DialogTitle, DialogContent, DialogContentText, DialogActions, Dialog } from '@material-ui/core'\nimport { Add, DeleteForever } from '@material-ui/icons'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { editTitle, addSection, deleteSong, saveSong, getSongFromSnapshot } from '../../redux/songReducer'\nimport { saveSnapshot, resetSnapshot } from '../../redux/snapshotReducer'\nimport SongSectionList from './SongSectionList'\nimport _ from 'lodash'\nimport UnsavedPrompt from './UnsavedPrompt'\nimport DialogCloseButton from '../DialogCloseButton'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  },\n  menuContainer: {\n    marginBottom: 3\n  },\n  titleField: {\n    margin: 15\n  },\n  addSectionButton: {\n    marginTop: 8\n  },\n  deleteSongButton: {\n    marginLeft: 'auto'\n  },\n  dialogCloseButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  }\n}))\n\nconst Song = ({ setAlertMessage, setAlertIsError }) => {\n  const [editMode, setEditMode] = useState(false)\n  const [delConfirmOpen, setDelConfirmOpen] = useState(false)\n  const [saveOpen, setSaveOpen] = useState(false)\n  const [titleError, setTitleError] = useState(false)\n\n  const classes = useStyles()\n  const id = useParams().id\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const song = useSelector((state) => state.songs.find(s => s.id === id))\n\n  const snapshot = useSelector((state) => state.snapshot)\n\n  console.log('Song render:', song)\n\n  const renderTitle = () => {\n    if (editMode) {\n      return (\n        <TextField\n          error={titleError}\n          className={classes.titleField}\n          label='Edit title'\n          defaultValue={song.title}\n          onChange={handleTitleChange}\n          helperText={titleError ? 'Title cannot be empty!' : ''} // Todo: enforce\n        />\n      )\n    } else {\n      return (\n        <h1>{song.title}</h1>\n      )\n    }\n  }\n\n\n  const addSectionButton = () => {\n    if (editMode) {\n      return (\n        <Button\n          className={classes.addSectionButton}\n          variant='contained'\n          color='primary'\n          startIcon={<Add />}\n          onClick={handleAddSectionClick}\n        >\n          New section\n        </Button>\n      )\n    }\n    return (<div/>)\n  }\n\n  const deleteSongButton = () => {\n    if (editMode) {\n      return (\n        <Button\n          className={classes.deleteSongButton}\n          variant='contained'\n          color='secondary'\n          startIcon={<DeleteForever />}\n          onClick={() => setDelConfirmOpen(true)}\n        >\n          Delete song\n        </Button>\n      )\n    }\n    return (<div/>)\n  }\n\n  const deleteDialog = () => {\n    return (\n      <Dialog\n        open={delConfirmOpen}\n        onClose={() => setDelConfirmOpen(false)}\n      >\n        <DialogTitle>Delete this song?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Once deleted, this song cannot be restored (not even by discarding changes when exiting Edit Mode).\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteAgreeClick} color='secondary' variant='contained'>\n            Delete permanently\n          </Button>\n          <Button onClick={() => setDelConfirmOpen(false)} variant='contained'>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  const saveDialog = () => {\n    return (\n      <Dialog\n        open={saveOpen}\n        onClose={() => setSaveOpen(false)}\n      >\n        <DialogTitle>Save changes?</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Save or discard the changes you have made.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSaveAgreeClick} color='primary' variant='contained'>\n            Save changes\n          </Button>\n          <Button onClick={handleSaveDiscardClick} color='secondary' variant='contained'>\n            Discard changes\n          </Button>\n          <DialogCloseButton onClick={() => setSaveOpen(false)} />\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  const handleEditButtonClick = () => {\n    if (editMode) {\n      handleEditModeExitClick()\n    } else {\n      handleEditModeEnterClick()\n    }\n  }\n\n  const handleEditModeEnterClick = () => {\n    dispatch(saveSnapshot(song))\n    setEditMode(true)\n  }\n\n  const handleEditModeExitClick = () => {\n    console.log('Exiting edit mode')\n    setSaveOpen(true)\n  }\n\n  const handleSaveAgreeClick = () => {\n    console.log('Saving!')\n    setSaveOpen(false)\n    setEditMode(false)\n    dispatch(resetSnapshot())\n    dispatch(saveSong(song))\n  }\n\n  const handleSaveDiscardClick = () => {\n    console.log('Discarding changes!')\n    setSaveOpen(false)\n    setEditMode(false)\n    dispatch(resetSnapshot())\n    dispatch(getSongFromSnapshot(snapshot))\n    console.log('Snapshot after reset:', snapshot)\n  }\n\n  const handleTitleChange = (event) => {\n    console.log(event.target.value)\n    if (event.target.value === '') {\n      setTitleError(true)\n    } else if (titleError) {\n      setTitleError(false)\n    }\n    dispatch(editTitle(song, event.target.value))\n  }\n\n  const handleAddSectionClick = () => {\n    console.log('Add new section!')\n    dispatch(addSection(song))\n  }\n\n  const handleDeleteAgreeClick = () => {\n    console.log('Deleting song here')\n    dispatch(deleteSong(song))\n    history.push('/songs/')\n  }\n\n  const unsavedChanges = () => {\n    return !_.isEmpty(snapshot) && !_.isEqual(snapshot, song)\n  }\n\n  if (song) {\n    return (\n      <div className={classes.root}>\n        {renderTitle()}\n        <div>\n          <Container align='right' maxWidth={false} className={classes.menuContainer}>\n            <Button\n              color='primary'\n              variant='contained'\n              onClick={handleEditButtonClick}\n            >\n              {editMode ? 'Exit edit mode' : 'Edit mode'}\n            </Button>\n          </Container>\n          <SongSectionList song={song} editMode={editMode} />\n        </div>\n        <Container maxWidth={false}>\n          {addSectionButton()}\n        </Container>\n        <Container align='right' maxWidth={false}>\n          {deleteSongButton()}\n        </Container>\n        {deleteDialog()}\n        {saveDialog()}\n        <UnsavedPrompt\n          handleSaveAgreeClick={handleSaveAgreeClick}\n          handleSaveDiscardClick={handleSaveDiscardClick}\n          unsavedChanges={unsavedChanges}\n        />\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <h1>Loading</h1>\n        <p>Check the url if it takes too long</p>\n      </div>\n    )\n  }\n}\n\nSong.propTypes = {\n  setAlertIsError: PropTypes.func.isRequired,\n  setAlertMessage: PropTypes.func.isRequired\n}\n\nexport default Song","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport PropTypes from 'prop-types'\n\n//const Alert = (props) => {\n//  return <MuiAlert elevation={6} variant='filled' {...props} />\n//}\n\nconst SnackbarAlert = ({ message, isError, handleClose }) => {\n  return (\n    <div>\n      <Snackbar open={message !== ''} autoHideDuration={5000} onClose={handleClose}>\n        <Alert\n          variant='filled'\n          onClose={handleClose}\n          severity={isError ? 'error' : 'success'}\n        >\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  )\n}\n\nSnackbarAlert.propTypes = {\n  message: PropTypes.string.isRequired,\n  isError: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired\n}\n\nexport default SnackbarAlert","import React, { useState, useEffect } from 'react'\nimport NavBar from './components/NavBar'\nimport { makeStyles, Container } from '@material-ui/core'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport SongList from './components/songs/SongList'\nimport Song from './components/songs/Song'\nimport SnackbarAlert from './components/SnackbarAlert'\nimport { initializeSongs } from './redux/songReducer'\nimport { useDispatch } from 'react-redux'\n\nconst useStyles = makeStyles(() => ({\n  mainContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  contentContainer: {\n\n  }\n}))\n\nconst App = () => {\n  console.log('App render')\n  const [alertMessage, setAlertMessage] = useState('')\n  const [alertIsError, setAlertIsError] = useState(false)\n  //const [open, setOpen] = useState(false)\n\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    console.log('App effect')\n    dispatch(initializeSongs())\n  }, [dispatch])\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') return\n\n    setAlertMessage('')\n  }\n\n  return (\n    <>\n      <Router>\n        <NavBar/>\n        <Container maxWidth={false} className={classes.mainContainer}>\n          <Container maxWidth={false} align='center' className={classes.contentContainer}>\n            <Switch>\n              <Route path='/songs/:id'>\n                <Song\n                  setAlertMessage={setAlertMessage}\n                  setAlertIsError={setAlertIsError}\n                />\n              </Route>\n              <Route path='/songs/'>\n                <SongList/>\n              </Route>\n              <Route path='/'><p>Welcome</p></Route>\n            </Switch>\n          </Container>\n          <SnackbarAlert\n            message={alertMessage}\n            isError={alertIsError}\n            handleClose={handleAlertClose}\n          />\n        </Container>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport songReducer from './songReducer'\nimport snapshotReducer from './snapshotReducer'\n\nconst composeEnhancers = composeWithDevTools({ trace: true })\n\nconst reducers = combineReducers({\n  songs: songReducer,\n  snapshot: snapshotReducer\n})\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { CssBaseline } from '@material-ui/core'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  //<React.StrictMode> // MAKES EVERYTHING RENDER TWICE!\n  <CssBaseline>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CssBaseline>,\n  //</React.StrictMode>\n  document.getElementById('root')\n)\n"],"sourceRoot":""}